{"version":3,"sources":["lib/lineSlicer.js"],"names":["slice","text","line","column","opts","delimiter","before","context","after","lines","split","begin","Math","max","end","min","length","marker","splice","padStart","join","module","exports"],"mappings":"AAAA,aAEA,SAASA,MAAOC,EAAMC,EAAMC,EAAQC,GAClC,MAAMC,EAAYD,EAAKC,WAAa,KAC9BC,EAASF,EAAKE,QAAUF,EAAKG,SAAW,EACxCC,EAAQJ,EAAKI,OAASJ,EAAKG,SAAW,EACtCE,EAAQR,EAAKS,MAAML,GACnBM,EAAQC,KAAKC,IAAI,EAAGX,EAAOI,EAAS,GACpCQ,EAAMF,KAAKG,IAAIb,EAAOM,EAAQ,EAAGC,EAAMO,OAAS,GAChDhB,EAAQS,EAAMT,MAAMW,EAAOG,EAAM,GAEvC,OADIV,EAAKa,QAAQjB,EAAMkB,OAAOhB,EAAOS,EAAO,EAAG,IAAIQ,SAAShB,EAAS,IAC9DH,EAAMoB,KAAKf,GAGpBgB,OAAOC,QAAUtB","sourcesContent":["'use strict';\n\nfunction slice (text, line, column, opts) {\n  const delimiter = opts.delimiter || '\\n';\n  const before = opts.before || opts.context || 0;\n  const after = opts.after || opts.context || 0;\n  const lines = text.split(delimiter);\n  const begin = Math.max(0, line - before - 1);\n  const end = Math.min(line + after - 1, lines.length - 1);\n  const slice = lines.slice(begin, end + 1);\n  if (opts.marker) slice.splice(line - begin, 0, '^'.padStart(column + 1));\n  return slice.join(delimiter);\n}\n\nmodule.exports = slice;\n"]}